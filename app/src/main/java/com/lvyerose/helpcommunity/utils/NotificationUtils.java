package com.lvyerose.helpcommunity.utils;import android.app.Notification;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.Context;import android.content.Intent;import android.support.v7.app.NotificationCompat;import com.lvyerose.helpcommunity.R;import com.lvyerose.helpcommunity.im.RequestListActivity;/** * author: lvyeRose * objective: * mailbox: lvyerose@163.com * time: 15/12/2 23:54 */public class NotificationUtils {    public static void sendNotification(Context context ,String title , String content){        //消息通知栏        //定义NotificationManager        String ns = Context.NOTIFICATION_SERVICE;        NotificationManager mNotificationManager = (NotificationManager) context.getSystemService(ns);        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context);        Intent intent = new Intent(context , RequestListActivity.class);        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);        PendingIntent pendingIntent= PendingIntent.getActivity(context, 1,                intent,                PendingIntent.FLAG_CANCEL_CURRENT);        mBuilder.setContentTitle(title)//设置通知栏标题                .setContentText(content) //设置通知栏显示内容                .setContentIntent(pendingIntent) //设置通知栏点击意图//                .setNumber(number) //设置通知集合的数量                .setTicker("新的好友验证消息") //通知首次出现在通知栏，带上升动画效果的                .setWhen(System.currentTimeMillis())//通知产生的时间，会在通知信息里显示，一般是系统获取到的时间                .setPriority(Notification.PRIORITY_DEFAULT) //设置该通知优先级                .setAutoCancel(true)//设置这个标志当用户单击面板就可以让通知将自动取消                .setOngoing(false)//ture，设置他为一个正在进行的通知。他们通常是用来表示一个后台任务,用户积极参与(如播放音乐)或以某种方式正在等待,因此占用设备(如一个文件下载,同步操作,主动网络连接)                .setDefaults(Notification.DEFAULT_VIBRATE)//向通知添加声音、闪灯和振动效果的最简单、最一致的方式是使用当前的用户默认设置，使用defaults属性，可以组合                //Notification.DEFAULT_ALL  Notification.DEFAULT_SOUND 添加声音 // requires VIBRATE permission                .setSmallIcon(R.mipmap.ic_launcher);//设置通知小ICON        mNotificationManager.notify(1, mBuilder.build());    }}